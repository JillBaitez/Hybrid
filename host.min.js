;(() => {
  const frameUrl = new URL(location.href)

  let configString = frameUrl.searchParams.get('c')
  if (!configString) return

  let config = configString
  try {
    config = JSON.parse(atob(config))
  } catch {
    return
  }

  let { url, provider, vua, vlang } = config
  if (!url || !provider) return

  chrome.tabs.getCurrent(tab => {
    config.frameName = `${config.provider}:${tab.id}`
    config.htosContext = 'iframe'
    delete config.url

    window.name = btoa(JSON.stringify(config))

    url = new URL(url)
    if (vua) url.searchParams.set('_vua', vua)
    if (vlang) url.searchParams.set('_vlang', vlang)
    location.href = url.href
  })
})()
